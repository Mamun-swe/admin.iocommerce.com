{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/GrapFood/admin/src/pages/role/Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { ChevronLeft } from 'react-feather';\nimport _ from 'lodash';\nimport { GrayButton, PrimaryButton } from '../../components/button/Index';\nimport { Layout, Main } from '../../components/layout/Index';\nimport { MultiSelect } from '../../components/select/Index';\nimport { Loader } from '../../components/loader/Index';\nimport Requests from '../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    register,\n    handleSubmit,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [data, setData] = useState(null);\n  const [isUpdate, setUpdate] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [permissions, setPermissions] = useState({\n    options: [],\n    values: []\n  });\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // fetch permissions\n\n  const fetchData = useCallback(async () => {\n    try {\n      let options = [];\n      let selectedOptions = [];\n      const response = await Requests.Acl.Routes(header);\n      const roleResponse = await Requests.Acl.Show(id, header);\n\n      if (roleResponse && roleResponse.status) {\n        setData(roleResponse.data);\n\n        if (roleResponse.data.rights && roleResponse.data.rights.length) {\n          for (let i = 0; i < roleResponse.data.rights.length; i++) {\n            const element = roleResponse.data.rights[i];\n            selectedOptions.push({\n              value: element,\n              label: _.capitalize(element)\n            });\n          }\n        }\n      }\n\n      if (response.data && response.data.length) {\n        for (let i = 0; i < response.data.length; i++) {\n          const element = response.data[i];\n          options.push({\n            label: _.capitalize(element.group),\n            value: element.group\n          });\n        }\n      }\n\n      setPermissions({\n        options: options,\n        values: selectedOptions\n      });\n      setLoading(false);\n    } catch (error) {\n      if (error) console.log(error);\n    }\n  }, [id, header]);\n  useEffect(() => {\n    fetchData();\n  }, [id, header, fetchData]); // Handle permission\n\n  const handlePermission = data => {\n    setPermissions(exPermission => ({ ...exPermission,\n      values: data.map(item => ({\n        value: item.value,\n        label: _.capitalize(item.label)\n      }))\n    }));\n    clearErrors([\"permissions\"]);\n  }; // Submit Form\n\n\n  const onSubmit = async data => {\n    if (!permissions.values.length) {\n      return setError(\"permissions\", {\n        type: \"manual\",\n        message: \"Permissions is required.\"\n      });\n    }\n\n    const formData = { ...data,\n      rights: permissions.values.map(item => item.value)\n    };\n    setUpdate(true);\n    await Requests.Acl.Update(id, formData, header);\n    setUpdate(false);\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      page: \"dashboard / role edit\",\n      message: \"Edit role for admin.\",\n      container: \"container-fluid\",\n      button: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard/role\",\n          children: /*#__PURE__*/_jsxDEV(GrayButton, {\n            type: \"button\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 15,\n              style: {\n                marginRight: 5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: 13\n              },\n              children: \"BACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-4\",\n            children: [errors.role && errors.role.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errors.role && errors.role.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control shadow-none\",\n              placeholder: \"Enter role title\",\n              defaultValue: data && data.role ? data.role : null,\n              ...register(\"role\", {\n                required: \"Role title is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-4\",\n            children: [errors.permissions && errors.permissions.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errors.permissions && errors.permissions.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Permissions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n              placeholder: \"permissions\",\n              error: errors.permissions,\n              deafult: permissions.values,\n              options: permissions.options,\n              values: handlePermission\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-end\",\n            children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n              type: \"submit\",\n              className: \"px-4\",\n              disabled: isUpdate,\n              children: isUpdate ? \"Updating ...\" : \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Edit, \"lnCshtN0OdgUqJDziIBs2E3gm+Q=\", false, function () {\n  return [useParams, useForm];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/media/mamun/Tools/GrapFood/admin/src/pages/role/Edit.js"],"names":["React","useCallback","useEffect","useState","Link","useParams","useForm","ChevronLeft","_","GrayButton","PrimaryButton","Layout","Main","MultiSelect","Loader","Requests","Edit","id","register","handleSubmit","setError","clearErrors","formState","errors","data","setData","isUpdate","setUpdate","isLoading","setLoading","permissions","setPermissions","options","values","header","headers","Authorization","localStorage","getItem","fetchData","selectedOptions","response","Acl","Routes","roleResponse","Show","status","rights","length","i","element","push","value","label","capitalize","group","error","console","log","handlePermission","exPermission","map","item","onSubmit","type","message","formData","Update","marginRight","fontSize","role","required"],"mappings":"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","sourcesContent":["\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { ChevronLeft } from 'react-feather'\nimport _ from 'lodash'\nimport {\n    GrayButton,\n    PrimaryButton\n} from '../../components/button/Index'\nimport { Layout, Main } from '../../components/layout/Index'\nimport { MultiSelect } from '../../components/select/Index'\nimport { Loader } from '../../components/loader/Index'\nimport Requests from '../../utils/Requests/Index'\n\nconst Edit = () => {\n    const { id } = useParams()\n    const { register, handleSubmit, setError, clearErrors, formState: { errors } } = useForm()\n    const [data, setData] = useState(null)\n    const [isUpdate, setUpdate] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [permissions, setPermissions] = useState({ options: [], values: [] })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // fetch permissions\n    const fetchData = useCallback(async () => {\n        try {\n            let options = []\n            let selectedOptions = []\n\n            const response = await Requests.Acl.Routes(header)\n            const roleResponse = await Requests.Acl.Show(id, header)\n\n            if (roleResponse && roleResponse.status) {\n                setData(roleResponse.data)\n\n                if (roleResponse.data.rights && roleResponse.data.rights.length) {\n                    for (let i = 0; i < roleResponse.data.rights.length; i++) {\n                        const element = roleResponse.data.rights[i]\n                        selectedOptions.push({ value: element, label: _.capitalize(element) })\n                    }\n                }\n            }\n\n            if (response.data && response.data.length) {\n                for (let i = 0; i < response.data.length; i++) {\n                    const element = response.data[i]\n                    options.push({ label: _.capitalize(element.group), value: element.group })\n                }\n            }\n\n            setPermissions({ options: options, values: selectedOptions })\n            setLoading(false)\n        } catch (error) {\n            if (error) console.log(error)\n        }\n    }, [id, header])\n\n    useEffect(() => {\n        fetchData()\n    }, [id, header, fetchData])\n\n    // Handle permission\n    const handlePermission = data => {\n        setPermissions(exPermission => ({ ...exPermission, values: data.map(item => ({ value: item.value, label: _.capitalize(item.label) })) }))\n        clearErrors([\"permissions\"])\n    }\n\n    // Submit Form\n    const onSubmit = async (data) => {\n        if (!permissions.values.length) {\n            return setError(\"permissions\", {\n                type: \"manual\",\n                message: \"Permissions is required.\",\n            });\n        }\n\n        const formData = {\n            ...data,\n            rights: permissions.values.map(item => item.value)\n        }\n\n        setUpdate(true)\n        await Requests.Acl.Update(id, formData, header)\n        setUpdate(false)\n    }\n\n    if (isLoading) return <Loader />\n\n    return (\n        <div>\n            <Layout\n                page=\"dashboard / role edit\"\n                message=\"Edit role for admin.\"\n                container=\"container-fluid\"\n                button={\n                    <div>\n                        <Link to=\"/dashboard/role\">\n                            <GrayButton type=\"button\">\n                                <ChevronLeft size={15} style={{ marginRight: 5 }} />\n                                <span style={{ fontSize: 13 }}>BACK</span>\n                            </GrayButton>\n                        </Link>\n                    </div>\n                }\n            />\n\n            <Main>\n                <div className=\"col-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n\n                        {/* Role */}\n                        <div className=\"form-group mb-4\">\n                            {errors.role && errors.role.message ?\n                                <p className=\"text-danger\">{errors.role && errors.role.message}</p>\n                                : <p>Role</p>}\n\n                            <input\n                                type=\"text\"\n                                className=\"form-control shadow-none\"\n                                placeholder=\"Enter role title\"\n                                defaultValue={data && data.role ? data.role : null}\n                                {...register(\"role\", { required: \"Role title is required\" })}\n                            />\n                        </div>\n\n\n                        {/* Permission */}\n                        <div className=\"form-group mb-4\">\n                            {errors.permissions && errors.permissions.message ?\n                                <p className=\"text-danger\">{errors.permissions && errors.permissions.message}</p>\n                                : <p>Permissions</p>}\n\n                            <MultiSelect\n                                placeholder=\"permissions\"\n                                error={errors.permissions}\n                                deafult={permissions.values}\n                                options={permissions.options}\n                                values={handlePermission}\n                            />\n                        </div>\n\n                        <div className=\"text-end\">\n                            <PrimaryButton\n                                type=\"submit\"\n                                className=\"px-4\"\n                                disabled={isUpdate}\n                            >{isUpdate ? \"Updating ...\" : \"Update\"}</PrimaryButton>\n                        </div>\n                    </form>\n                </div>\n            </Main>\n        </div>\n    );\n}\n\nexport default Edit;"]},"metadata":{},"sourceType":"module"}