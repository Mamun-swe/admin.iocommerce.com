{"ast":null,"code":"import Axios from 'axios';\nimport swal from 'sweetalert';\nimport { api } from '../api';\nimport { ErrorHandeller } from './Error'; // Index of items\n\nconst Index = async header => {\n  try {\n    const response = await Axios.get(`${api}admin`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Store item\n\n\n_c = Index;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}admin`, data, header);\n\n    if (response.status === 201) {\n      swal({\n        title: \"Successfully!\",\n        text: response.data.message,\n        icon: \"success\",\n        button: false\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Show specific item\n\n\n_c2 = Store;\n\nconst Show = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}admin/${id}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Update specific item\n\n\n_c3 = Show;\n\nconst Update = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}admin/${id}`, data, header);\n\n    if (response.status === 201) {\n      swal({\n        title: \"Successfully!\",\n        text: response.data.message,\n        icon: \"success\",\n        button: false\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n};\n\n_c4 = Update;\nconst Admin = {\n  Index,\n  Store,\n  Show,\n  Update\n};\nexport default Admin;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Store\");\n$RefreshReg$(_c3, \"Show\");\n$RefreshReg$(_c4, \"Update\");","map":{"version":3,"sources":["/media/mamun/Tools/iocommerce/admin/src/utils/Requests/Admin.js"],"names":["Axios","swal","api","ErrorHandeller","Index","header","response","get","status","data","error","Store","post","title","text","message","icon","button","Show","id","Update","put","Admin"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,cAAT,QAA+B,SAA/B,C,CAEA;;AACA,MAAMC,KAAK,GAAG,MAAOC,MAAP,IAAkB;AAC5B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEL,GAAI,OAAjB,EAAyBG,MAAzB,CAAvB;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,OAAOF,QAAQ,CAACG,IAAhB;AAChC,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOP,cAAc,CAACO,KAAD,CAArB;AACd;AACJ,CAPD,C,CASA;;;KATMN,K;;AAUN,MAAMO,KAAK,GAAG,OAAOF,IAAP,EAAaJ,MAAb,KAAwB;AAClC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACY,IAAN,CAAY,GAAEV,GAAI,OAAlB,EAA0BO,IAA1B,EAAgCJ,MAAhC,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBP,MAAAA,IAAI,CAAC;AACDY,QAAAA,KAAK,EAAE,eADN;AAEDC,QAAAA,IAAI,EAAER,QAAQ,CAACG,IAAT,CAAcM,OAFnB;AAGDC,QAAAA,IAAI,EAAE,SAHL;AAIDC,QAAAA,MAAM,EAAE;AAJP,OAAD,CAAJ;AAMA,aAAO,IAAP;AACH;AACJ,GAXD,CAWE,OAAOP,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOP,cAAc,CAACO,KAAD,CAArB;AACd;AACJ,CAfD,C,CAiBA;;;MAjBMC,K;;AAkBN,MAAMO,IAAI,GAAG,OAAOC,EAAP,EAAWd,MAAX,KAAsB;AAC/B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEL,GAAI,SAAQiB,EAAG,EAA5B,EAA+Bd,MAA/B,CAAvB;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B,OAAOF,QAAQ,CAACG,IAAhB;AAChC,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOP,cAAc,CAACO,KAAD,CAArB;AACd;AACJ,CAPD,C,CASA;;;MATMQ,I;;AAUN,MAAME,MAAM,GAAG,OAAOD,EAAP,EAAWV,IAAX,EAAiBJ,MAAjB,KAA4B;AACvC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACqB,GAAN,CAAW,GAAEnB,GAAI,SAAQiB,EAAG,EAA5B,EAA+BV,IAA/B,EAAqCJ,MAArC,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBP,MAAAA,IAAI,CAAC;AACDY,QAAAA,KAAK,EAAE,eADN;AAEDC,QAAAA,IAAI,EAAER,QAAQ,CAACG,IAAT,CAAcM,OAFnB;AAGDC,QAAAA,IAAI,EAAE,SAHL;AAIDC,QAAAA,MAAM,EAAE;AAJP,OAAD,CAAJ;AAMA,aAAO,IAAP;AACH;AACJ,GAXD,CAWE,OAAOP,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAOP,cAAc,CAACO,KAAD,CAArB;AACd;AACJ,CAfD;;MAAMU,M;AAkBN,MAAME,KAAK,GAAG;AACVlB,EAAAA,KADU;AAEVO,EAAAA,KAFU;AAGVO,EAAAA,IAHU;AAIVE,EAAAA;AAJU,CAAd;AAOA,eAAeE,KAAf","sourcesContent":["import Axios from 'axios'\nimport swal from 'sweetalert'\nimport { api } from '../api'\nimport { ErrorHandeller } from './Error'\n\n// Index of items\nconst Index = async (header) => {\n    try {\n        const response = await Axios.get(`${api}admin`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Store item\nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}admin`, data, header)\n        if (response.status === 201) {\n            swal({\n                title: \"Successfully!\",\n                text: response.data.message,\n                icon: \"success\",\n                button: false,\n            })\n            return true\n        }\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Show specific item\nconst Show = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}admin/${id}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Update specific item\nconst Update = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}admin/${id}`, data, header)\n        if (response.status === 201) {\n            swal({\n                title: \"Successfully!\",\n                text: response.data.message,\n                icon: \"success\",\n                button: false,\n            })\n            return true\n        }\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n\nconst Admin = {\n    Index,\n    Store,\n    Show,\n    Update\n}\n\nexport default Admin"]},"metadata":{},"sourceType":"module"}