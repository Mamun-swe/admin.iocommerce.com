{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/GrapFood/admin/src/pages/category/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { ChevronLeft } from 'react-feather';\nimport { GrayButton, PrimaryButton } from '../../components/button/Index';\nimport { Layout, Main } from '../../components/layout/Index';\nimport { FileUploader } from '../../components/fileUploader/Single';\nimport Requests from '../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [image, setImage] = useState({\n    value: null,\n    error: null\n  });\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Handle form submission\n\n  const onSubmit = async data => {\n    if (!image.value) return setImage({ ...image,\n      error: \"Category banner is required.\"\n    });\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('name', data.name);\n    formData.append('image', image.value);\n    setLoading(true);\n    await Requests.Category.Store(formData, header);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      page: \"dashboard / category store\",\n      message: \"Create new category.\",\n      container: \"container-fluid\",\n      button: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard/category\",\n          children: /*#__PURE__*/_jsxDEV(GrayButton, {\n            type: \"button\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 15,\n              style: {\n                marginRight: 5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: 13\n              },\n              children: \"BACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-4\",\n            children: [errors.name && errors.name.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errors.name && errors.name.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Category name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control shadow-none\",\n              placeholder: \"Enter category name\",\n              ...register(\"name\", {\n                required: \"Category name is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n            width: 200,\n            height: 80,\n            limit: 300,\n            title: \"Category banner (1080X200)\",\n            error: image.error,\n            dataHandeller: data => setImage({ ...image,\n              value: data.image || null,\n              error: data.error || null\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-end\",\n            children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n              type: \"submit\",\n              disabled: loading,\n              className: \"px-4\",\n              children: loading ? \"Loading ...\" : \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"RF+r3SzlUWagbd24Vhmh/cDmhv4=\", false, function () {\n  return [useForm];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/media/mamun/Tools/GrapFood/admin/src/pages/category/Create.js"],"names":["React","useState","Link","useForm","ChevronLeft","GrayButton","PrimaryButton","Layout","Main","FileUploader","Requests","Create","register","handleSubmit","formState","errors","loading","setLoading","image","setImage","value","error","header","headers","Authorization","localStorage","getItem","onSubmit","data","formData","FormData","append","name","Category","Store","marginRight","fontSize","message","required"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { ChevronLeft } from 'react-feather'\nimport {\n    GrayButton,\n    PrimaryButton\n} from '../../components/button/Index'\nimport { Layout, Main } from '../../components/layout/Index'\nimport { FileUploader } from '../../components/fileUploader/Single'\nimport Requests from '../../utils/Requests/Index'\n\nconst Create = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm()\n    const [loading, setLoading] = useState(false)\n    const [image, setImage] = useState({ value: null, error: null })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Handle form submission\n    const onSubmit = async data => {\n        if (!image.value) return setImage({ ...image, error: \"Category banner is required.\" })\n\n        setLoading(true)\n        const formData = new FormData()\n        formData.append('name', data.name)\n        formData.append('image', image.value)\n\n        setLoading(true)\n        await Requests.Category.Store(formData, header)\n        setLoading(false)\n    }\n\n    return (\n        <div>\n            <Layout\n                page=\"dashboard / category store\"\n                message=\"Create new category.\"\n                container=\"container-fluid\"\n                button={\n                    <div>\n                        <Link to=\"/dashboard/category\">\n                            <GrayButton type=\"button\">\n                                <ChevronLeft size={15} style={{ marginRight: 5 }} />\n                                <span style={{ fontSize: 13 }}>BACK</span>\n                            </GrayButton>\n                        </Link>\n                    </div>\n                }\n            />\n\n            <Main>\n                <div className=\"col-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n\n                        {/* Name */}\n                        <div className=\"form-group mb-4\">\n                            {errors.name && errors.name.message ?\n                                <p className=\"text-danger\">{errors.name && errors.name.message}</p>\n                                : <p>Category name</p>}\n\n                            <input\n                                type=\"text\"\n                                className=\"form-control shadow-none\"\n                                placeholder=\"Enter category name\"\n                                {...register(\"name\", { required: \"Category name is required\" })}\n                            />\n                        </div>\n\n\n                        {/* File uploader */}\n                        <FileUploader\n                            width={200}\n                            height={80}\n                            limit={300}\n                            title=\"Category banner (1080X200)\"\n                            error={image.error}\n                            dataHandeller={(data) => setImage({ ...image, value: data.image || null, error: data.error || null })}\n                        />\n\n\n                        <div className=\"text-end\">\n                            <PrimaryButton\n                                type=\"submit\"\n                                disabled={loading}\n                                className=\"px-4\"\n                            >\n                                {loading ? \"Loading ...\" : \"Submit\"}\n                            </PrimaryButton>\n                        </div>\n                    </form>\n                </div>\n            </Main>\n        </div>\n    );\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}