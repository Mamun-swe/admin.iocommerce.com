{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/GrapFood/admin/src/pages/order/Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Eye, Plus } from 'react-feather';\nimport { GrayButton, SuccessButton } from '../../components/button/Index';\nimport { Layout, Main } from '../../components/layout/Index';\nimport { DateFormate } from '../../utils/_heplers';\nimport DataTable from '../../components/table/Index';\nimport Requests from '../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [totalRows, setTotalRows] = useState(0);\n  const [perPage, setPerPage] = useState(10);\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // Fetch data\n\n  const fetchData = useCallback(async page => {\n    setLoading(true);\n    const response = await Requests.Order.Index(page, perPage, header);\n    setData(response.data.data);\n    setTotalRows(response.data.data.length);\n    setLoading(false);\n  }, [perPage, header]);\n\n  const handlePageChange = page => fetchData(page); // Data paginate\n\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    setLoading(true);\n    const response = await Requests.Order.Index(page, newPerPage, header);\n    setData(response.data.data);\n    setPerPage(newPerPage);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData(1);\n  }, [fetchData]);\n  const columns = [{\n    name: 'Order Code',\n    grow: 0,\n    selector: row => 'FF' + row.orderCode\n  }, {\n    name: 'Order Date',\n    cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: DateFormate(row.createdAt)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 26\n    }, this),\n    sortable: true\n  }, {\n    name: 'Status',\n    selector: row => row.status,\n    sortable: true\n  }, {\n    name: 'Action',\n    grow: 0,\n    cell: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SuccessButton, {\n        style: {\n          borderRadius: \"50%\",\n          padding: \"6px 9px\"\n        },\n        onClick: () => history.push(`/dashboard/order/show/${row._id}`),\n        children: /*#__PURE__*/_jsxDEV(Eye, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      page: \"dashboard / order list\",\n      message: `${data.length} orders are available.`,\n      container: \"container-fluid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: data,\n          loading: loading,\n          totalRows: totalRows,\n          handlePerRowsChange: handlePerRowsChange,\n          handlePageChange: handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Index, \"0evvCI836quGyj0CFztE8iCJUII=\", false, function () {\n  return [useHistory];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/media/mamun/Tools/GrapFood/admin/src/pages/order/Index.js"],"names":["React","useState","useEffect","useCallback","Link","useHistory","Eye","Plus","GrayButton","SuccessButton","Layout","Main","DateFormate","DataTable","Requests","Index","history","data","setData","loading","setLoading","totalRows","setTotalRows","perPage","setPerPage","header","headers","Authorization","localStorage","getItem","fetchData","page","response","Order","length","handlePageChange","handlePerRowsChange","newPerPage","columns","name","grow","selector","row","orderCode","cell","createdAt","sortable","status","borderRadius","padding","push","_id"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Eye, Plus } from 'react-feather'\nimport { GrayButton, SuccessButton } from '../../components/button/Index'\nimport { Layout, Main } from '../../components/layout/Index'\nimport { DateFormate } from '../../utils/_heplers'\nimport DataTable from '../../components/table/Index'\nimport Requests from '../../utils/Requests/Index'\n\nconst Index = () => {\n    const history = useHistory()\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [totalRows, setTotalRows] = useState(0)\n    const [perPage, setPerPage] = useState(10)\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // Fetch data\n    const fetchData = useCallback(async (page) => {\n        setLoading(true)\n        const response = await Requests.Order.Index(page, perPage, header)\n\n        setData(response.data.data)\n        setTotalRows(response.data.data.length)\n        setLoading(false)\n    }, [perPage, header])\n\n    const handlePageChange = page => fetchData(page)\n\n    // Data paginate\n    const handlePerRowsChange = async (newPerPage, page) => {\n        setLoading(true)\n        const response = await Requests.Order.Index(page, newPerPage, header)\n\n        setData(response.data.data)\n        setPerPage(newPerPage)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchData(1)\n    }, [fetchData])\n\n    const columns = [\n        {\n            name: 'Order Code',\n            grow: 0,\n            selector: row => 'FF' + row.orderCode,\n        },\n        {\n            name: 'Order Date',\n            cell: row => <div>{DateFormate(row.createdAt)}</div>,\n            sortable: true,\n        },\n        {\n            name: 'Status',\n            selector: row => row.status,\n            sortable: true,\n        },\n        {\n            name: 'Action',\n            grow: 0,\n            cell: row =>\n                <div>\n                    <SuccessButton\n                        style={{ borderRadius: \"50%\", padding: \"6px 9px\" }}\n                        onClick={() => history.push(`/dashboard/order/show/${row._id}`)}\n                    ><Eye size={16} />\n                    </SuccessButton>\n                </div>\n        },\n    ]\n\n    return (\n        <div>\n            <Layout\n                page=\"dashboard / order list\"\n                message={`${data.length} orders are available.`}\n                container=\"container-fluid\"\n            />\n\n            <Main>\n                <div className=\"col-12\">\n                    <DataTable\n                        columns={columns}\n                        data={data}\n                        loading={loading}\n                        totalRows={totalRows}\n                        handlePerRowsChange={handlePerRowsChange}\n                        handlePageChange={handlePageChange}\n                    />\n                </div>\n            </Main>\n        </div>\n    );\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}