{"ast":null,"code":"import Axios from 'axios';\nimport swal from 'sweetalert';\nimport { api } from '../api';\nimport { ErrorHandeller } from './Error'; // Index of items\n\nconst Index = async (page, limit, header) => {\n  try {\n    const response = await Axios.get(`${api}product?page=${page}&limit=${limit}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Store item\n\n\n_c = Index;\n\nconst Store = async (data, header) => {\n  try {\n    const response = await Axios.post(`${api}product`, data, header);\n\n    if (response.status === 201) {\n      swal({\n        title: \"Successfully!\",\n        text: response.data.message,\n        icon: \"success\",\n        button: false\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) {\n      console.log(error.response);\n      return ErrorHandeller(error);\n    }\n  }\n}; // Show specific item\n\n\n_c2 = Store;\n\nconst Show = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}product/${id}`, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Update specific item\n\n\n_c3 = Show;\n\nconst Update = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}product/${id}`, data, header);\n\n    if (response.status === 201) {\n      swal({\n        title: \"Successfully!\",\n        text: response.data.message,\n        icon: \"success\",\n        button: false\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Update specific item SM image\n\n\n_c4 = Update;\n\nconst UpdateSMImage = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}product/sm-image/${id}`, data, header);\n\n    if (response.status === 201) {\n      swal({\n        title: \"Successfully!\",\n        text: response.data.message,\n        icon: \"success\",\n        button: false\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Add new additional image\n\n\n_c5 = UpdateSMImage;\n\nconst AddAdditional = async (id, data, header) => {\n  try {\n    const response = await Axios.put(`${api}product/additional-image/${id}`, data, header);\n\n    if (response.status === 201) {\n      swal({\n        title: \"Successfully!\",\n        text: response.data.message,\n        icon: \"success\",\n        button: false\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Remove additional image\n\n\n_c6 = AddAdditional;\n\nconst RemoveAdditional = async (id, file, header) => {\n  try {\n    const response = await Axios.delete(`${api}product/additional-image/${id}/${file}`, header);\n\n    if (response.status === 200) {\n      swal({\n        title: \"Successfully!\",\n        text: response.data.message,\n        icon: \"success\",\n        button: false\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Change vendor request status\n\n\n_c7 = RemoveAdditional;\n\nconst VendorRequest = async (id, header) => {\n  try {\n    const response = await Axios.get(`${api}product/status/vendor/${id}`, header);\n\n    if (response.status === 201) {\n      swal({\n        title: \"Successfully!\",\n        text: response.data.message,\n        icon: \"success\",\n        button: false\n      });\n      return true;\n    }\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Search item\n\n\n_c8 = VendorRequest;\n\nconst Search = async (query, header) => {\n  try {\n    const response = await Axios.post(`${api}product/search`, query, header);\n    if (response.status === 200) return response.data;\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Search with sku\n\n\n_c9 = Search;\n\nconst SearchBySku = async (value, header) => {\n  let results;\n\n  try {\n    const response = await Axios.get(`https://api.eazybest.com/api/v1/client/search/suggest/${value}`, header);\n    if (response.status === 200) results = response.data.results;\n  } catch (error) {\n    if (error) results = [];\n  }\n\n  return results;\n};\n\n_c10 = SearchBySku;\nconst Product = {\n  Index,\n  Store,\n  Show,\n  Update,\n  UpdateSMImage,\n  AddAdditional,\n  RemoveAdditional,\n  VendorRequest,\n  Search,\n  SearchBySku\n};\nexport default Product;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Store\");\n$RefreshReg$(_c3, \"Show\");\n$RefreshReg$(_c4, \"Update\");\n$RefreshReg$(_c5, \"UpdateSMImage\");\n$RefreshReg$(_c6, \"AddAdditional\");\n$RefreshReg$(_c7, \"RemoveAdditional\");\n$RefreshReg$(_c8, \"VendorRequest\");\n$RefreshReg$(_c9, \"Search\");\n$RefreshReg$(_c10, \"SearchBySku\");","map":{"version":3,"sources":["/media/mamun/Tools/GrapFood/admin/src/utils/Requests/Product.js"],"names":["Axios","swal","api","ErrorHandeller","Index","page","limit","header","response","get","status","data","error","Store","post","title","text","message","icon","button","console","log","Show","id","Update","put","UpdateSMImage","AddAdditional","RemoveAdditional","file","delete","VendorRequest","Search","query","SearchBySku","value","results","Product"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport swal from 'sweetalert'\nimport { api } from '../api'\nimport { ErrorHandeller } from './Error'\n\n// Index of items\nconst Index = async (page, limit, header) => {\n    try {\n        const response = await Axios.get(`${api}product?page=${page}&limit=${limit}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Store item\nconst Store = async (data, header) => {\n    try {\n        const response = await Axios.post(`${api}product`, data, header)\n        if (response.status === 201) {\n            swal({\n                title: \"Successfully!\",\n                text: response.data.message,\n                icon: \"success\",\n                button: false,\n            })\n            return true\n        }\n    } catch (error) {\n        if (error) {\n            console.log(error.response);\n            return ErrorHandeller(error)\n        }\n    }\n}\n\n// Show specific item\nconst Show = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}product/${id}`, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Update specific item\nconst Update = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}product/${id}`, data, header)\n        if (response.status === 201) {\n            swal({\n                title: \"Successfully!\",\n                text: response.data.message,\n                icon: \"success\",\n                button: false,\n            })\n            return true\n        }\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Update specific item SM image\nconst UpdateSMImage = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}product/sm-image/${id}`, data, header)\n        if (response.status === 201) {\n            swal({\n                title: \"Successfully!\",\n                text: response.data.message,\n                icon: \"success\",\n                button: false,\n            })\n            return true\n        }\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Add new additional image\nconst AddAdditional = async (id, data, header) => {\n    try {\n        const response = await Axios.put(`${api}product/additional-image/${id}`, data, header)\n        if (response.status === 201) {\n            swal({\n                title: \"Successfully!\",\n                text: response.data.message,\n                icon: \"success\",\n                button: false,\n            })\n            return true\n        }\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Remove additional image\nconst RemoveAdditional = async (id, file, header) => {\n    try {\n        const response = await Axios.delete(`${api}product/additional-image/${id}/${file}`, header)\n        if (response.status === 200) {\n            swal({\n                title: \"Successfully!\",\n                text: response.data.message,\n                icon: \"success\",\n                button: false,\n            })\n            return true\n        }\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Change vendor request status\nconst VendorRequest = async (id, header) => {\n    try {\n        const response = await Axios.get(`${api}product/status/vendor/${id}`, header)\n        if (response.status === 201) {\n            swal({\n                title: \"Successfully!\",\n                text: response.data.message,\n                icon: \"success\",\n                button: false,\n            })\n            return true\n        }\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Search item\nconst Search = async (query, header) => {\n    try {\n        const response = await Axios.post(`${api}product/search`, query, header)\n        if (response.status === 200) return response.data\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n// Search with sku\nconst SearchBySku = async (value, header) => {\n    let results\n    try {\n        const response = await Axios.get(`https://api.eazybest.com/api/v1/client/search/suggest/${value}`, header)\n        if (response.status === 200) results = response.data.results\n    } catch (error) { if (error) results = [] }\n\n    return results\n}\n\nconst Product = {\n    Index,\n    Store,\n    Show,\n    Update,\n    UpdateSMImage,\n    AddAdditional,\n    RemoveAdditional,\n    VendorRequest,\n    Search,\n    SearchBySku\n}\n\nexport default Product"]},"metadata":{},"sourceType":"module"}