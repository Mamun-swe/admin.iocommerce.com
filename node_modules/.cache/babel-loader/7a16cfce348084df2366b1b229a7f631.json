{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/GrapFood/admin/src/pages/subscriber/Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { GrayButton } from '../../components/button/Index';\nimport { Layout, Main } from '../../components/layout/Index';\nimport DataTable from '../../components/table/Index'; // import Requests from '../../utils/Requests/Index'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  const [data] = useState([]);\n  const [loading] = useState(false); // const [totalRows, setTotalRows] = useState(0)\n  // const [perPage, setPerPage] = useState(10)\n  // const [header] = useState({\n  //     headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n  // })\n  // const fetchData = useCallback(async (page) => {\n  //     setLoading(true)\n  //     const response = await Requests.Vendor.Index(page, perPage, header)\n  //     setData(response.data)\n  //     setTotalRows(response.data.length)\n  //     setLoading(false)\n  // }, [perPage, header])\n  // const handlePageChange = page => fetchData(page)\n  // const handlePerRowsChange = async (newPerPage, page) => {\n  //     setLoading(true)\n  //     const response = await Requests.Vendor.Index(page, newPerPage, header)\n  //     setData(response.data)\n  //     setPerPage(newPerPage)\n  //     setLoading(false)\n  // }\n  // useEffect(() => {\n  //     fetchData(1)\n  // }, [fetchData])\n\n  const columns = [{\n    name: 'E-mail',\n    selector: row => row.email\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      page: \"dashboard / subscribers list\",\n      message: \"All Subscribers.\",\n      container: \"container-fluid\",\n      button: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(GrayButton, {\n          type: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(Plus, {\n            size: 15,\n            style: {\n              marginRight: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 13\n            },\n            children: \"Export XLSX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: data,\n          loading: loading // totalRows={totalRows}\n          // handlePerRowsChange={handlePerRowsChange}\n          // handlePageChange={handlePageChange}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Index, \"ckC4d/Y4sTvMRc/gqFOZ5n8SsbA=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/media/mamun/Tools/GrapFood/admin/src/pages/subscriber/Index.js"],"names":["React","useState","Plus","GrayButton","Layout","Main","DataTable","Index","data","loading","columns","name","selector","row","email","marginRight","fontSize"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,+BAA7B;AACA,OAAOC,SAAP,MAAsB,8BAAtB,C,CACA;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,IAASP,QAAQ,CAAC,EAAD,CAAvB;AACA,QAAM,CAACQ,OAAD,IAAYR,QAAQ,CAAC,KAAD,CAA1B,CAFgB,CAGhB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMS,OAAO,GAAG,CACZ;AACIC,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,QAAQ,EAAEC,GAAG,IAAIA,GAAG,CAACC;AAFzB,GADY,CAAhB;AAOA,sBACI;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,IAAI,EAAC,8BADT;AAEI,MAAA,OAAO,EAAC,kBAFZ;AAGI,MAAA,SAAS,EAAC,iBAHd;AAII,MAAA,MAAM,eACF;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,QAAjB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,EAAE,EAAZ;AAAgB,YAAA,KAAK,EAAE;AAAEC,cAAAA,WAAW,EAAE;AAAf;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI,QAAC,IAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,OAAO,EAAEN,OADb;AAEI,UAAA,IAAI,EAAEF,IAFV;AAGI,UAAA,OAAO,EAAEC,OAHb,CAII;AACA;AACA;;AANJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAtED;;GAAMF,K;;KAAAA,K;AAwEN,eAAeA,KAAf","sourcesContent":["\nimport React, { useState } from 'react'\nimport { Plus } from 'react-feather'\nimport { GrayButton } from '../../components/button/Index'\nimport { Layout, Main } from '../../components/layout/Index'\nimport DataTable from '../../components/table/Index'\n// import Requests from '../../utils/Requests/Index'\n\nconst Index = () => {\n    const [data] = useState([])\n    const [loading] = useState(false)\n    // const [totalRows, setTotalRows] = useState(0)\n    // const [perPage, setPerPage] = useState(10)\n    // const [header] = useState({\n    //     headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    // })\n\n    // const fetchData = useCallback(async (page) => {\n    //     setLoading(true)\n    //     const response = await Requests.Vendor.Index(page, perPage, header)\n\n    //     setData(response.data)\n    //     setTotalRows(response.data.length)\n    //     setLoading(false)\n    // }, [perPage, header])\n\n    // const handlePageChange = page => fetchData(page)\n\n    // const handlePerRowsChange = async (newPerPage, page) => {\n    //     setLoading(true)\n    //     const response = await Requests.Vendor.Index(page, newPerPage, header)\n\n    //     setData(response.data)\n    //     setPerPage(newPerPage)\n    //     setLoading(false)\n    // }\n\n    // useEffect(() => {\n    //     fetchData(1)\n    // }, [fetchData])\n\n    const columns = [\n        {\n            name: 'E-mail',\n            selector: row => row.email\n        },\n    ]\n\n    return (\n        <div>\n            <Layout\n                page=\"dashboard / subscribers list\"\n                message=\"All Subscribers.\"\n                container=\"container-fluid\"\n                button={\n                    <div>\n                        <GrayButton type=\"button\">\n                            <Plus size={15} style={{ marginRight: 5 }} />\n                            <span style={{ fontSize: 13 }}>Export XLSX</span>\n                        </GrayButton>\n                    </div>\n                }\n            />\n\n            <Main>\n                <div className=\"col-12\">\n                    <DataTable\n                        columns={columns}\n                        data={data}\n                        loading={loading}\n                        // totalRows={totalRows}\n                        // handlePerRowsChange={handlePerRowsChange}\n                        // handlePageChange={handlePageChange}\n                    />\n                </div>\n            </Main>\n        </div>\n    );\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}