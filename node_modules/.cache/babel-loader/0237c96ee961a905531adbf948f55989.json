{"ast":null,"code":"// Formate array data as options\nexport const OptionMaker = data => {\n  let options = [];\n\n  if (data && data.length) {\n    for (let i = 0; i < data.length; i++) {\n      const element = data[i];\n      options.push({\n        label: element,\n        value: element\n      });\n    }\n  }\n\n  return options;\n}; // Date formate\n\n_c = OptionMaker;\nexport const DateFormate = date => {\n  const givenDate = new Date(date);\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const day = givenDate.getDate();\n  const month = months[givenDate.getMonth()];\n  const year = givenDate.getFullYear();\n  const changeDate = day + \" \" + month + \", \" + year;\n  return changeDate;\n}; // Phone number valid check\n\n_c2 = DateFormate;\nexport const isValidPhone = () => {\n  const regex = /^(?:\\+88|88)?(01[3-9]\\d{8})$/i;\n  return regex;\n}; // E-mail valid check\n\nexport const isValidEmail = () => {\n  const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n  return regex;\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OptionMaker\");\n$RefreshReg$(_c2, \"DateFormate\");","map":{"version":3,"sources":["/media/mamun/Tools/iocommerce/admin/src/utils/_heplers.js"],"names":["OptionMaker","data","options","length","i","element","push","label","value","DateFormate","date","givenDate","Date","months","day","getDate","month","getMonth","year","getFullYear","changeDate","isValidPhone","regex","isValidEmail"],"mappings":"AACA;AACA,OAAO,MAAMA,WAAW,GAAGC,IAAI,IAAI;AAC/B,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAID,IAAI,IAAIA,IAAI,CAACE,MAAjB,EAAyB;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACE,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;AAClC,YAAMC,OAAO,GAAGJ,IAAI,CAACG,CAAD,CAApB;AACAF,MAAAA,OAAO,CAACI,IAAR,CAAa;AACTC,QAAAA,KAAK,EAAEF,OADE;AAETG,QAAAA,KAAK,EAAEH;AAFE,OAAb;AAIH;AACJ;;AAED,SAAOH,OAAP;AACH,CAbM,C,CAeP;;KAfaF,W;AAgBb,OAAO,MAAMS,WAAW,GAAIC,IAAD,IAAU;AACjC,QAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAlB;AACA,QAAMG,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAf;AAEA,QAAMC,GAAG,GAAGH,SAAS,CAACI,OAAV,EAAZ;AACA,QAAMC,KAAK,GAAGH,MAAM,CAACF,SAAS,CAACM,QAAV,EAAD,CAApB;AACA,QAAMC,IAAI,GAAGP,SAAS,CAACQ,WAAV,EAAb;AACA,QAAMC,UAAU,GAAGN,GAAG,GAAG,GAAN,GAAYE,KAAZ,GAAoB,IAApB,GAA2BE,IAA9C;AAEA,SAAOE,UAAP;AACH,CAVM,C,CAYP;;MAZaX,W;AAab,OAAO,MAAMY,YAAY,GAAG,MAAM;AAC9B,QAAMC,KAAK,GAAG,+BAAd;AACA,SAAOA,KAAP;AACH,CAHM,C,CAKP;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,QAAMD,KAAK,GAAG,0CAAd;AACA,SAAOA,KAAP;AACH,CAHM","sourcesContent":["\n// Formate array data as options\nexport const OptionMaker = data => {\n    let options = []\n    if (data && data.length) {\n        for (let i = 0; i < data.length; i++) {\n            const element = data[i]\n            options.push({\n                label: element,\n                value: element,\n            })\n        }\n    }\n\n    return options\n}\n\n// Date formate\nexport const DateFormate = (date) => {\n    const givenDate = new Date(date)\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\n    const day = givenDate.getDate()\n    const month = months[givenDate.getMonth()]\n    const year = givenDate.getFullYear()\n    const changeDate = day + \" \" + month + \", \" + year\n\n    return changeDate\n}\n\n// Phone number valid check\nexport const isValidPhone = () => {\n    const regex = /^(?:\\+88|88)?(01[3-9]\\d{8})$/i\n    return regex\n}\n\n// E-mail valid check\nexport const isValidEmail = () => {\n    const regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n    return regex\n}"]},"metadata":{},"sourceType":"module"}