{"ast":null,"code":"import Axios from 'axios';\nimport { authApi } from '../api';\nimport { ErrorHandeller } from './Error'; // Login\n\nconst Login = async data => {\n  try {\n    const response = await Axios.post(`${authApi}login`, data);\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n}; // Reset\n\n\n_c = Login;\n\nconst Reset = async data => {\n  try {\n    const response = await Axios.post(`${authApi}reset`, data);\n\n    if (response.status === 201) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error) return ErrorHandeller(error);\n  }\n};\n\n_c2 = Reset;\nconst Auth = {\n  Login\n};\nexport default Auth;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Reset\");","map":{"version":3,"sources":["/media/mamun/Tools/GrapFood/admin/src/utils/Requests/Auth.js"],"names":["Axios","authApi","ErrorHandeller","Login","data","response","post","status","error","Reset","Auth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,cAAT,QAA+B,SAA/B,C,CAEA;;AACA,MAAMC,KAAK,GAAG,MAAOC,IAAP,IAAgB;AAC1B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAAY,GAAEL,OAAQ,OAAtB,EAA8BG,IAA9B,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAOF,QAAQ,CAACD,IAAhB;AACH;AACJ,GALD,CAKE,OAAOI,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAON,cAAc,CAACM,KAAD,CAArB;AACd;AACJ,CATD,C,CAYA;;;KAZML,K;;AAaN,MAAMM,KAAK,GAAG,MAAOL,IAAP,IAAgB;AAC1B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAAY,GAAEL,OAAQ,OAAtB,EAA8BG,IAA9B,CAAvB;;AACA,QAAIC,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAOF,QAAQ,CAACD,IAAhB;AACH;AACJ,GALD,CAKE,OAAOI,KAAP,EAAc;AACZ,QAAIA,KAAJ,EAAW,OAAON,cAAc,CAACM,KAAD,CAArB;AACd;AACJ,CATD;;MAAMC,K;AAWN,MAAMC,IAAI,GAAG;AACTP,EAAAA;AADS,CAAb;AAIA,eAAeO,IAAf","sourcesContent":["import Axios from 'axios'\nimport { authApi } from '../api'\nimport { ErrorHandeller } from './Error'\n\n// Login\nconst Login = async (data) => {\n    try {\n        const response = await Axios.post(`${authApi}login`, data)\n        if (response.status === 200) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\n\n// Reset\nconst Reset = async (data) => {\n    try {\n        const response = await Axios.post(`${authApi}reset`, data)\n        if (response.status === 201) {\n            return response.data\n        }\n    } catch (error) {\n        if (error) return ErrorHandeller(error)\n    }\n}\n\nconst Auth = {\n    Login\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}