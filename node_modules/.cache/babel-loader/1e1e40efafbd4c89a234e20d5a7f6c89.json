{"ast":null,"code":"var _jsxFileName = \"/media/mamun/Tools/GrapFood/admin/src/pages/role/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { ChevronLeft } from 'react-feather';\nimport _ from 'lodash';\nimport { GrayButton, PrimaryButton } from '../../components/button/Index';\nimport { Layout, Main } from '../../components/layout/Index';\nimport { MultiSelect } from '../../components/select/Index';\nimport Requests from '../../utils/Requests/Index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [isLoading, setLoading] = useState(false);\n  const [permissions, setPermissions] = useState({\n    options: [],\n    values: []\n  });\n  const [header] = useState({\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    }\n  }); // fetch permissions\n\n  const fetchData = useCallback(async () => {\n    let options = [];\n    let selectedOptions = [];\n    const response = await Requests.Acl.Routes(header);\n\n    if (response.data && response.data.length) {\n      for (let i = 0; i < response.data.length; i++) {\n        const element = response.data[i];\n        options.push({\n          label: _.capitalize(element.group),\n          value: element.group\n        });\n      }\n    }\n\n    setPermissions({\n      options: options,\n      values: selectedOptions\n    });\n    setLoading(false);\n  }, [header]);\n  useEffect(() => {\n    fetchData();\n  }, [header, fetchData]); // Handle permission\n\n  const handlePermission = event => {\n    setPermissions(exPermission => ({ ...exPermission,\n      values: event\n    }));\n    clearErrors('permissions');\n  }; // Submit Form\n\n\n  const onSubmit = async data => {\n    if (!permissions.values.length) {\n      return setError(\"permissions\", {\n        type: \"manual\",\n        message: \"Permissions is required.\"\n      });\n    }\n\n    const formData = { ...data,\n      rights: permissions.values.map(item => item.value)\n    };\n    setLoading(true);\n    await Requests.Acl.Store(formData, header);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      page: \"dashboard / role create\",\n      message: \"Make new role for admin.\",\n      container: \"container-fluid\",\n      button: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard/role\",\n          children: /*#__PURE__*/_jsxDEV(GrayButton, {\n            type: \"button\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 15,\n              style: {\n                marginRight: 5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: 13\n              },\n              children: \"BACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-4\",\n            children: [errors.role && errors.role.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errors.role && errors.role.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control shadow-none\",\n              placeholder: \"Enter role title\",\n              ...register(\"role\", {\n                required: \"Role title is required\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-4\",\n            children: [errors.permissions && errors.permissions.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errors.permissions && errors.permissions.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Permissions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n              placeholder: \"permissions\",\n              error: errors.permissions,\n              options: permissions.options,\n              values: handlePermission\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-end\",\n            children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n              type: \"submit\",\n              className: \"px-4\",\n              disabled: isLoading,\n              children: isLoading ? \"Creating ...\" : \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"gN+qPQJHCceyh7o3fT8MtMBUM9U=\", false, function () {\n  return [useForm];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/media/mamun/Tools/GrapFood/admin/src/pages/role/Create.js"],"names":["React","useCallback","useEffect","useState","Link","useForm","ChevronLeft","_","GrayButton","PrimaryButton","Layout","Main","MultiSelect","Requests","Create","register","handleSubmit","setError","clearErrors","formState","errors","isLoading","setLoading","permissions","setPermissions","options","values","header","headers","Authorization","localStorage","getItem","fetchData","selectedOptions","response","Acl","Routes","data","length","i","element","push","label","capitalize","group","value","handlePermission","event","exPermission","onSubmit","type","message","formData","rights","map","item","Store","marginRight","fontSize","role","required"],"mappings":"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","sourcesContent":["\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport { ChevronLeft } from 'react-feather'\nimport _ from 'lodash'\nimport {\n    GrayButton,\n    PrimaryButton\n} from '../../components/button/Index'\nimport { Layout, Main } from '../../components/layout/Index'\nimport { MultiSelect } from '../../components/select/Index'\nimport Requests from '../../utils/Requests/Index'\n\nconst Create = () => {\n    const { register, handleSubmit, setError, clearErrors, formState: { errors } } = useForm()\n    const [isLoading, setLoading] = useState(false)\n    const [permissions, setPermissions] = useState({ options: [], values: [] })\n    const [header] = useState({\n        headers: { Authorization: \"Bearer \" + localStorage.getItem('token') }\n    })\n\n    // fetch permissions\n    const fetchData = useCallback(async () => {\n        let options = []\n        let selectedOptions = []\n\n        const response = await Requests.Acl.Routes(header)\n\n        if (response.data && response.data.length) {\n            for (let i = 0; i < response.data.length; i++) {\n                const element = response.data[i]\n                options.push({ label: _.capitalize(element.group), value: element.group })\n            }\n        }\n\n        setPermissions({ options: options, values: selectedOptions })\n        setLoading(false)\n    }, [header])\n\n    useEffect(() => {\n        fetchData()\n    }, [header, fetchData])\n\n\n    // Handle permission\n    const handlePermission = event => {\n        setPermissions(exPermission => ({ ...exPermission, values: event }))\n        clearErrors('permissions')\n    }\n\n    // Submit Form\n    const onSubmit = async (data) => {\n        if (!permissions.values.length) {\n            return setError(\"permissions\", {\n                type: \"manual\",\n                message: \"Permissions is required.\",\n            });\n        }\n\n        const formData = {\n            ...data,\n            rights: permissions.values.map(item => item.value)\n        }\n\n        setLoading(true)\n        await Requests.Acl.Store(formData, header)\n        setLoading(false)\n    }\n\n    return (\n        <div>\n            <Layout\n                page=\"dashboard / role create\"\n                message=\"Make new role for admin.\"\n                container=\"container-fluid\"\n                button={\n                    <div>\n                        <Link to=\"/dashboard/role\">\n                            <GrayButton type=\"button\">\n                                <ChevronLeft size={15} style={{ marginRight: 5 }} />\n                                <span style={{ fontSize: 13 }}>BACK</span>\n                            </GrayButton>\n                        </Link>\n                    </div>\n                }\n            />\n\n            <Main>\n                <div className=\"col-12\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n\n                        {/* Role */}\n                        <div className=\"form-group mb-4\">\n                            {errors.role && errors.role.message ?\n                                <p className=\"text-danger\">{errors.role && errors.role.message}</p>\n                                : <p>Role</p>}\n\n                            <input\n                                type=\"text\"\n                                className=\"form-control shadow-none\"\n                                placeholder=\"Enter role title\"\n                                {...register(\"role\", { required: \"Role title is required\" })}\n                            />\n                        </div>\n\n\n                        {/* Permission */}\n                        <div className=\"form-group mb-4\">\n                            {errors.permissions && errors.permissions.message ?\n                                <p className=\"text-danger\">{errors.permissions && errors.permissions.message}</p>\n                                : <p>Permissions</p>}\n\n                            <MultiSelect\n                                placeholder=\"permissions\"\n                                error={errors.permissions}\n                                options={permissions.options}\n                                values={handlePermission}\n                            />\n                        </div>\n\n                        <div className=\"text-end\">\n                            <PrimaryButton\n                                type=\"submit\"\n                                className=\"px-4\"\n                                disabled={isLoading}\n                            >{isLoading ? \"Creating ...\" : \"Create\"}</PrimaryButton>\n                        </div>\n                    </form>\n                </div>\n            </Main>\n        </div>\n    );\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}